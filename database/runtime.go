// Code generated by ent, DO NOT EDIT.

package database

import (
	"time"

	"github.com/jurshsmith/vaultstream/database/record"
	"github.com/jurshsmith/vaultstream/database/schema"
	"github.com/jurshsmith/vaultstream/database/signature"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	recordFields := schema.Record{}.Fields()
	_ = recordFields
	// recordDescInsertedAt is the schema descriptor for inserted_at field.
	recordDescInsertedAt := recordFields[1].Descriptor()
	// record.DefaultInsertedAt holds the default value on creation for the inserted_at field.
	record.DefaultInsertedAt = recordDescInsertedAt.Default.(func() time.Time)
	signatureFields := schema.Signature{}.Fields()
	_ = signatureFields
	// signatureDescKeyID is the schema descriptor for key_id field.
	signatureDescKeyID := signatureFields[1].Descriptor()
	// signature.KeyIDValidator is a validator for the "key_id" field. It is called by the builders before save.
	signature.KeyIDValidator = signatureDescKeyID.Validators[0].(func(int) error)
	// signatureDescValue is the schema descriptor for value field.
	signatureDescValue := signatureFields[2].Descriptor()
	// signature.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	signature.ValueValidator = signatureDescValue.Validators[0].(func(string) error)
	// signatureDescInsertedAt is the schema descriptor for inserted_at field.
	signatureDescInsertedAt := signatureFields[3].Descriptor()
	// signature.DefaultInsertedAt holds the default value on creation for the inserted_at field.
	signature.DefaultInsertedAt = signatureDescInsertedAt.Default.(func() time.Time)
}
